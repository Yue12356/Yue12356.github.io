[{"title":"something_about_hexo_theme_02","date":"2019-09-28T15:08:45.000Z","path":"2019/09/something-about-hexo-theme-02/","text":""},{"title":"someting_about_hexo_theme_01","date":"2019-09-28T13:52:06.000Z","path":"2019/09/someting-about-hexo-theme-01/","text":"something about hexo theme系列的博客用来记录我学习hexo主题的一个过程。 起因是我最近想折腾一下个人博客这个东西，然后我就看到了hexo+github pages+个人域名这样一个打造个人博客的方案。当然，如果可以接受直接使用http://xxx.github.io的话，那也无所谓。当然更加好的方案就是能有自己的一个服务器，毕竟github也不总是能很快响应。但是这些都不是重点。重点是Hexo，一个快速，简洁且高效的博客框架（好像每个框架都会这么讲）。 这里直接贴上hexo中文文档，hexo的安装，基本操作这里就不详细记录了，直接进入正题。 hexo theme我已经了解过使用一个新的主题，只要git clone一个主题到themes/文件夹下，然后修改博客根目录下的_config.yml中的theme值为主题的名字，就能使用。那么创建主题其实也是类似的。 文档中也给出了一个主题一般具有的一个文件结构，只要在themes/下创建一个文件夹作为开发主题的文件夹，名字命名为主题的名字（没有试过中文，避免不必要的错误，建议英文）。 theme file tree123456.├── _config.yml├── languages├── layout├── scripts└── source _config.yml 主题的配置文件 languages 语言文件夹。暂且先不管。 layout 布局文件夹，用来存放主题的模板。Hexo内建Swig模板引擎，可以另外安装插件来获得EJS，Haml或Jade支持。Hexo根据扩展名决定使用的模板引擎。 scripts 脚本文件夹。 source 资源文件夹，除模板外的Asset，如css，javascript文件等。文件或文件夹名称开头为_或隐藏的文件会被忽略。 看完了官方的这么个介绍，确实有了点整体印象，但要如何动手还是一脸懵逼的。比如配置文件怎么写？模板怎么写？都说最好的学习方法就是模仿，那我就直接挑一个好看的主题，git clone 一下，看看别人都是怎么写的。 start learn theme miho随机的挑了一个主题miho，看上去还是挺干净，大气的（个人辣鸡审美）。 看一下它的文件结构 1234567.├── _config.yml├── languages├── layout├── README.md├── source└── _source 和官方相比，没有scripts，还写了个README，先简单看看README都写了些啥吧。README里面写了支持的Hexo版本，以及如何使用、配置这个主题的config和一些参数，写得还是很详细的。 templates突然想起一件重要的事情，官方文档里的模板内容还没看呢。正好现在看看。 有些地方还不是能够看得很懂。但简单先把知道的东西列出来吧。 每个主题至少包含一个index模板(index.ejs)，用来展示主页，其他页面对应的模板有post(文章)，page(分页)，archive(归档)、等等（用到再说） 每个模板默认使用layout布局(layout.ejs)，布局文件中必须有一个显示body变量用来显示模板的内容，否则模板是不会显示的。另外还能通过front-matter指定其他布局，或是设为false关闭布局功能。（暂且没试过，还不知道啥效果） 局部模板（Partial）能使不同模板使用相同的组件，例如页眉，页脚，侧边栏等，便于维护。（这么说应该是非常重要的东西） 局部缓存，用于优化复杂的主题下，频繁查询文件夹，它能储存局部内容，使速度更快。（这大概是最不理解的部分了，不过没关系，现在暂且用不到） 那miho的layout是怎么样的呢 12345678910.├── archive.ejs├── category.ejs├── index.ejs├── layout.ejs├── page.ejs├── _partial├── post.ejs├── tag.ejs└── _widget 确实有一个layout布局，还有index模板，page分页模板，post文章模板，archive归档模板，tag标签归档模板，还有两个文件夹_partial，_widget通过名字猜测大概和局部模板相关？先看看layout吧 123456789101112131415&lt;%- partial('_partial/head') %&gt;&lt;body&gt; &lt;div id=\"container\"&gt; &lt;%- partial('_partial/header', null, &#123;cache: !config.relative_link&#125;) %&gt; &lt;div class=\"outer\"&gt; &lt;section id=\"main\" class=\"body-wrap\"&gt;&lt;%- body %&gt;&lt;/section&gt; &lt;% if (theme.sidebar &amp;&amp; theme.sidebar !== 'bottom')&#123; %&gt; &lt;%- partial('_partial/sidebar', null, &#123;cache: !config.relative_link&#125;) %&gt; &lt;% &#125; %&gt; &lt;/div&gt; &lt;%- partial('_partial/footer', null, &#123;cache: !config.relative_link&#125;) %&gt; &lt;%- partial('_partial/after-footer') %&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 很明显的&lt;% %&gt;指得应该不是html标签，大概是ejs这个东西，这个东西是啥呢。之前官方文档中也有提到。这里贴出ejs介绍，赶紧去看看吧。 这里我们大概知道标签的含义就行了，不清楚的地方，再接着看文档。 &lt;% ‘脚本’ 标签，用于流程控制，无输出。 &lt;%_ 删除其前面的空格符 &lt;%= 输出数据到模板（输出是转义 HTML 标签） &lt;%- 输出非转义的数据到模板 &lt;%# 注释标签，不执行、不输出内容 &lt;%% 输出字符串 ‘&lt;%’ %&gt; 一般结束标签 -%&gt; 删除紧随其后的换行符 _%&gt; 将结束标签后面的空格符删除 现在的时间有点晚了，下次再接着看吧。"}]